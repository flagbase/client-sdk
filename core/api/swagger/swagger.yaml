openapi: 3.0.0
info:
  description: |
    # Overview
    ## Key Concepts
    TODO

    ## Authentication
    TODO

    ## Representations
    TODO

    ## CORS
    TODO

    ## Versioning
    TODO
  title: Flagbase API
  version: 1.0.0
  contact:
    name: Flagbase
    url: 'https://flagbase.com/oss'
    email: info@flagbase.com
  license:
    name: MPL 2.0
    url: 'https://flagbase.com/legal/license'
  x-logo:
    altText: Flagbase Core API
  termsOfService: 'https://flagbase.com/legal/terms'
tags:
  - name: auth
    x-displayName: Access Token
    description: Access authorisation
  - name: workspaces
    x-displayName: Workspace Management
    description: "Workspaces represent a collection of projects. It can be used to group an individual or organisation's projects."
  - name: workspace-access
    x-displayName: Workspace Access
    description: A new workspace-access link should be created in order to enable the appropriate acess permissions to this resource and its children.
  - name: projects
    x-displayName: Project Management
    description: Projects represent a collection of feature flags and their respective rollout rules etc. Projects also have different contexts which are applied (i.e. environments).
  - name: project-access
    x-displayName: Project Access
    description: A new project-access link should be created in order to enable the appropriate acess permissions to this resource and its children.
  - name: environments
    x-displayName: Environment Management
    description: 'Environments are used to maintain isolated contexts for project resources (such as feature flags, rollout rules etc). For example, you can have Test and Production environments, which contain completely separate rollout rules etc.'
  - name: environment-access
    x-displayName: Environment Access
    description: A new environment-access link should be created in order to enable the appropriate acess permissions to this resource and its children.
  - name: flags
    x-displayName: Flag Management
    description: 'A feature flag (aka feature switch) represent the current state of a feature. Feature flags consists of variations (ie. boolean (true, false) or multi-variant (A, B, C)), where each variation represents a unique state of a particular feature.'
  - name: variations
    x-displayName: Variation Management
    description: A variation represents a particular feature flag state. Feature flags usually consist of multiple variations (e.g. True and False). We can rollout different feature variations to particular users or user segments.
  - name: targeting
    x-displayName: Targeting Management
    description: 'Targeting is essentially a rollout configuration which defines how feature flag variations are rolled out to specific users. Rollout rules can target specific user or segments. After users "evaluate" a specific rollout rule and obtain a flag variation.'
  - name: targeting-rules
    x-displayName: Targeting Rules
    description: Targeting rules allow you to explicity define how you want to target feature flags to users. You are required to specify logical statements which are evaluated when serving flags to users.
  - name: targeting-weights
    x-displayName: Targeting Weights
    description: Targeting weights are used to incrementally rollout variations to a specific percentage of users.
  - name: traits
    x-displayName: Trait Management
    description: Traits represent a particular characteristic of a particular identity (aka users). You can create segments using these traits. Traits can also be used to target variations to specific users.
  - name: segments
    x-displayName: Segment Management
    description: Segments represent a specific group of users based on their attributes. You can define a specific user segments using a set rules. Rules contain conditions that are applied to attributes.
  - name: segment-rules
    x-displayName: Segment Rules
    description: "Segment rules consists of conditions that need to match a specific user's attributes (i.e. identity traits) ."
  - name: identities
    x-displayName: Identity Management
    description: An identity is an instance of a user. Identities are initially created when the first evaluate a feature flag (i.e. by using the SDK).
  - name: auditlog
    x-displayName: Auditlog
    description: 'Auditlog is a log of all mutations on the workspace and its children resources (i.e. projects, environments and feature flags).'
x-tagGroups:
  - name: Authorization
    tags:
      - auth
  - name: Workspaces
    tags:
      - workspaces
      - workspace-access
  - name: Projects
    tags:
      - projects
      - project-access
  - name: Environments
    tags:
      - environments
      - environment-access
  - name: Feature Flags
    tags:
      - flags
      - variations
  - name: Targeting
    tags:
      - targeting
      - targeting-rules
      - targeting-weights
  - name: Users
    tags:
      - identities
      - traits
      - segments
      - segment-rules
  - name: Auditing
    tags:
      - auditlog
paths:
  '/workspaces/{workspaceKey}':
    get:
      operationId: get-workspace
      summary: Get workspace
      description: 'Retreive a workspace, given the workspace key.'
      tags:
        - workspaces
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    $ref: '#/components/schemas/Workspace'
        '500':
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
    parameters:
      - name: workspaceKey
        in: path
        required: true
        description: The workspace key
        schema:
          type: string
    patch:
      summary: Update workspace
      operationId: update-workspace
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    $ref: '#/components/schemas/Workspace'
        '500':
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
      tags:
        - workspaces
      description: Update an existing workspace.
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PatchDocument'
        description: Patch Document (RFC 6902)
    delete:
      summary: Delete workspace
      operationId: delete-workspace
      responses:
        '204':
          description: No Content
          content:
            application/json:
              schema: {}
        '500':
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
      description: Delete an existing workspace. This operation can not be undone. Please proceed with caution.
      tags:
        - workspaces
  '/projects/{workspaceKey}/{projectKey}':
    parameters:
      - name: projectKey
        in: path
        required: true
        description: The project key
        schema:
          type: string
      - schema:
          type: string
        name: workspaceKey
        in: path
        required: true
        description: |
          The workspace key
    get:
      summary: Get project
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    $ref: '#/components/schemas/Project'
        '500':
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
      operationId: get-project
      tags:
        - projects
      description: Get an existing project.
    patch:
      summary: Update project
      operationId: update-project
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    $ref: '#/components/schemas/Project'
        '500':
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
      tags:
        - projects
      description: Update an existing project.
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PatchDocument'
          application/xml:
            schema:
              $ref: '#/components/schemas/PatchDocument'
        description: Patch Document (RFC 6902)
    delete:
      summary: Delete project
      operationId: delete-project
      responses:
        '204':
          description: No Content
        '500':
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
      tags:
        - projects
      description: Delete an existing project.
  '/environments/{workspaceKey}/{projectKey}/{envKey}':
    parameters:
      - name: projectKey
        in: path
        required: true
        description: The project key
        schema:
          type: string
      - name: envKey
        in: path
        required: true
        description: The environment key
        schema:
          type: string
      - schema:
          type: string
        name: workspaceKey
        in: path
        required: true
        description: The workspace key
    get:
      summary: Get environment
      tags:
        - environments
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    $ref: '#/components/schemas/Environment'
        '500':
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
      operationId: get-environment
      description: Get a project environment.
      parameters: []
    patch:
      summary: Update environment
      operationId: update-environment
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    $ref: '#/components/schemas/Environment'
        '500':
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
      tags:
        - environments
      description: Update an existing environment.
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PatchDocument'
        description: Patch Document (RFC 6902)
    delete:
      summary: Delete environment
      operationId: delete-environment
      responses:
        '204':
          description: No Content
        '500':
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
      tags:
        - environments
      description: Delete an existing environment.
  '/flags/{workspaceKey}/{projectKey}':
    parameters:
      - name: projectKey
        in: path
        required: true
        description: The project key
        schema:
          type: string
      - schema:
          type: string
        name: workspaceKey
        in: path
        required: true
        description: The workspace key
    get:
      summary: List feature flags
      tags:
        - flags
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    type: array
                    items:
                      $ref: '#/components/schemas/Flag'
        '500':
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
      operationId: list-flags
      parameters:
        - in: query
          name: env
          description: The environment key
          required: true
          schema:
            type: string
      description: List feature flags in the project.
    post:
      summary: Create feature flag
      operationId: create-flag
      responses:
        '201':
          description: Created
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    $ref: '#/components/schemas/Flag'
        '500':
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
      tags:
        - flags
      description: Create a new feature flag in the specified project
      parameters:
        - in: query
          name: env
          description: The environment key
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Flag'
        description: Flag Object
  /workspaces:
    get:
      summary: List workspaces
      tags:
        - workspaces
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    type: array
                    items:
                      $ref: '#/components/schemas/Workspace'
        '500':
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
      operationId: list-workspaces
      description: |-
        List all workspaces.

        Note: you need root access to perform this operation.
    post:
      summary: Create workspace
      operationId: create-workspace
      responses:
        '201':
          description: Created
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SuccessResponse'
        '500':
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
      tags:
        - workspaces
      description: Create a new workspace. Workspace keys must be unique.
      requestBody:
        $ref: '#/components/requestBodies/Workspace'
    parameters: []
  '/projects/{workspaceKey}':
    post:
      summary: Create project
      operationId: create-project
      responses:
        '201':
          description: Created
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    $ref: '#/components/schemas/Project'
        '500':
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Project'
        description: 'Project Object '
      tags:
        - projects
      description: Create a new project. The project will be created in the workspace accociated with the access key-secret pair being used.
    parameters:
      - schema:
          type: string
        name: workspaceKey
        in: path
        required: true
        description: The workspace key
    get:
      summary: List projects
      operationId: get-projects
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    type: array
                    items:
                      $ref: '#/components/schemas/Project'
        '500':
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
      description: List all projects in the workspace associated with this access key-secret pair.
      tags:
        - projects
  /access/token:
    post:
      summary: Obtain access token
      operationId: gen-access-token
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    $ref: '#/components/schemas/AccessToken'
        '500':
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
      description: Obtain a signed access token using an access key-secret pair.
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                key:
                  type: string
                  description: Unique access key
                secret:
                  type: string
                  description: Access secret
              required:
                - key
                - secret
        description: Access key-secret pair.
      tags:
        - auth
    parameters: []
  /auditlog:
    get:
      summary: List audit logs
      tags:
        - auditlog
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    $ref: '#/components/schemas/Auditlog'
        '500':
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
      operationId: list-auditlog
      description: Retrieve a segment of audit logs within a particular time-peroid.
      parameters:
        - in: query
          name: after
          description: Unix timestamp denoting the start time to filter logs.
          schema:
            type: string
        - in: query
          name: before
          description: Unix timestamp denoting the end time to filter logs.
          schema:
            type: string
        - in: query
          name: q
          description: Search query param
          schema:
            type: string
        - in: query
          name: limit
          description: Number of log items to fetch. Useful for pagination.
          schema:
            type: number
        - in: query
          name: skip
          description: Number of log items to skip. Useful for pagination.
          schema:
            type: string
  '/workspaces/{workspaceKey}/access':
    parameters:
      - name: workspaceKey
        in: path
        required: true
        description: The workspace key
        schema:
          type: string
    get:
      summary: List workspace access
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    type: array
                    items:
                      $ref: '#/components/schemas/Access'
        '500':
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
      operationId: list-workspace-access
      description: List access keys that are currently in use for a particular workspace.
      tags:
        - workspace-access
    post:
      summary: Create workspace access
      operationId: create-workspace-access
      responses:
        '201':
          description: Created
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    $ref: '#/components/schemas/Access'
        '500':
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
      description: Create a new workspace access link. Make sure you generate the access key-secret pair with the appropriate permissions type before using this operation.
      requestBody:
        $ref: '#/components/requestBodies/AccessInput'
      tags:
        - workspace-access
    delete:
      summary: Delete workspace access
      operationId: delete-workspaces-access
      responses:
        '204':
          description: No Content
        '500':
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
      description: Delete an existing workspace access link.
      requestBody:
        $ref: '#/components/requestBodies/AccessPairInput'
      tags:
        - workspace-access
  '/projects/{workspaceKey}/{projectKey}/access':
    get:
      summary: List project access
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    $ref: '#/components/schemas/AccessPairInput'
        '500':
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
      operationId: list-project-access
      description: List access keys that are currently in use for a particular project.
      tags:
        - project-access
    parameters:
      - name: projectKey
        in: path
        required: true
        description: The project key
        schema:
          type: string
      - schema:
          type: string
        name: workspaceKey
        in: path
        required: true
        description: The workspace key
    post:
      summary: Create project access
      operationId: create-project-access
      responses:
        '201':
          description: Created
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    $ref: '#/components/schemas/Access'
        '500':
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
      description: Create a new project access link. Make sure you generate the access key-secret pair with the appropriate permissions type before using this operation.
      requestBody:
        $ref: '#/components/requestBodies/AccessInput'
      tags:
        - project-access
    delete:
      summary: Delete project access
      operationId: delete-project-access
      responses:
        '204':
          description: No Content
        '500':
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
      description: Delete an existing project access link.
      requestBody:
        $ref: '#/components/requestBodies/AccessPairInput'
      tags:
        - project-access
  '/environments/{workspaceKey}/{projectKey}/{envKey}/access':
    parameters:
      - name: envKey
        in: path
        required: true
        description: The environment key
        schema:
          type: string
      - name: projectKey
        in: path
        required: true
        description: The project key
        schema:
          type: string
      - schema:
          type: string
        name: workspaceKey
        in: path
        required: true
        description: The workspace key
    get:
      summary: List environment access
      tags:
        - environment-access
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    type: array
                    items:
                      $ref: '#/components/schemas/Access'
        '500':
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
      operationId: list-environment-access
      description: List access keys that are currently in use for a particular environment.
    post:
      summary: Create environment access
      operationId: create-environment-access
      responses:
        '201':
          description: Created
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    $ref: '#/components/schemas/Access'
        '500':
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
      tags:
        - environment-access
      description: Create a new environment access link. Make sure you generate the access key-secret pair with the appropriate permissions type before using this operation.
    delete:
      summary: Delete environment access
      operationId: delete-environment-access
      responses:
        '204':
          description: No Content
        '500':
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
      tags:
        - environment-access
      description: Delete an existing environment access link.
      requestBody:
        $ref: '#/components/requestBodies/AccessPairInput'
  '/environments/{workspaceKey}/{projectKey}':
    parameters:
      - name: projectKey
        in: path
        required: true
        description: The project key
        schema:
          type: string
      - schema:
          type: string
        name: workspaceKey
        in: path
        required: true
        description: The workspace key
    get:
      summary: List project environments
      tags:
        - environments
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    type: array
                    items:
                      $ref: '#/components/schemas/Environment'
        '500':
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
      operationId: list-environments
      description: "Retreive a list of a project's environments."
    post:
      summary: Create environment
      operationId: create-environment
      responses:
        '201':
          description: Created
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    $ref: '#/components/schemas/Environment'
        '500':
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
      tags:
        - environments
      description: Create a new project environment
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/EnvironmentInput'
        description: Environmnet Object
  '/flags/{workspaceKey}/{projectKey}/{flagKey}':
    parameters:
      - name: projectKey
        in: path
        required: true
        description: The project key
        schema:
          type: string
      - name: flagKey
        in: path
        required: true
        description: The flag key
        schema:
          type: string
      - schema:
          type: string
        name: workspaceKey
        in: path
        required: true
        description: The workspace key
    get:
      summary: Get feature flag
      tags:
        - flags
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    $ref: '#/components/schemas/Flag'
        '500':
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
      operationId: get-flag
      parameters:
        - in: query
          name: env
          required: true
          schema:
            type: string
      description: Get a single feature flag using its key.
    patch:
      summary: Update feature flag
      operationId: update-flag
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    $ref: '#/components/schemas/Flag'
        '500':
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
      tags:
        - flags
      description: Update an existing flag.
      parameters:
        - in: query
          name: env
          description: The environment key
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PatchDocument'
        description: Patch Document (RFC 6902)
    delete:
      summary: Delete feature flag
      operationId: delete-flag
      responses:
        '204':
          description: No Content
        '500':
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
      tags:
        - flags
      description: Delete an existing flag.
  '/variations/{workspaceKey}/{projectKey}/{flagKey}':
    parameters:
      - name: flagKey
        in: path
        required: true
        description: The flag key
        schema:
          type: string
      - name: projectKey
        in: path
        required: true
        description: The project key
        schema:
          type: string
      - schema:
          type: string
        name: workspaceKey
        in: path
        required: true
        description: The workspace key
    get:
      summary: List variations
      tags:
        - variations
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    type: array
                    items:
                      $ref: '#/components/schemas/Variation'
        '500':
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
      operationId: list-variations
      description: List all variations of a specific flag.
    post:
      summary: Create variation
      operationId: create-variation
      responses:
        '201':
          description: Created
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    $ref: '#/components/schemas/Variation'
        '500':
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
      tags:
        - variations
      description: Create a flag variation.
      requestBody:
        $ref: '#/components/requestBodies/Variation'
  '/variations/{workspaceKey}/{projectKey}/{flagKey}/{variationKey}':
    parameters:
      - name: projectKey
        in: path
        required: true
        description: The project key
        schema:
          type: string
      - name: flagKey
        in: path
        required: true
        description: The flag key
        schema:
          type: string
      - name: variationKey
        in: path
        required: true
        description: The variation key
        schema:
          type: string
      - schema:
          type: string
        name: workspaceKey
        in: path
        required: true
        description: The workspace key
    get:
      summary: Get variation
      tags:
        - variations
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    $ref: '#/components/schemas/Variation'
        '500':
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
      operationId: get-variation
      description: Get a single variation of a specific flag.
    patch:
      summary: Update variation
      operationId: update-variation
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    $ref: '#/components/schemas/Variation'
        '500':
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
      tags:
        - variations
      description: Update a specific variation.
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PatchDocument'
        description: Patch Document (RFC 6902)
    delete:
      summary: Delete variation
      operationId: delete-variation
      responses:
        '204':
          description: No Content
        '500':
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
      tags:
        - variations
      description: Delete a single flag variation
  '/identities/{workspaceKey}/{projectKey}/{envKey}':
    parameters:
      - name: projectKey
        in: path
        required: true
        description: The project key
        schema:
          type: string
      - name: envKey
        in: path
        required: true
        description: The environment key
        schema:
          type: string
      - schema:
          type: string
        name: workspaceKey
        in: path
        required: true
        description: The workspace key
    get:
      summary: List identities
      tags:
        - identities
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    type: array
                    items:
                      $ref: '#/components/schemas/Identity'
        '500':
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
      operationId: list-identities
      description: List project identities in a specific environment.
      parameters:
        - in: query
          name: q
          description: Search query
          schema:
            type: string
        - in: query
          name: limit
          description: Number of identities items to fetch. Useful for pagination.
          schema:
            type: number
        - in: query
          name: offset
          description: Number of identities to skip. Useful for pagination.
          schema:
            type: number
  '/identities/{workspaceKey}/{projectKey}/{envKey}/{identityKey}':
    parameters:
      - name: projectKey
        in: path
        required: true
        description: The project key
        schema:
          type: string
      - name: envKey
        in: path
        required: true
        description: The environment key
        schema:
          type: string
      - name: identityKey
        in: path
        required: true
        description: The identity key
        schema:
          type: string
      - schema:
          type: string
        name: workspaceKey
        in: path
        required: true
        description: The workspace key
    get:
      summary: Get identity
      tags:
        - identities
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    $ref: '#/components/schemas/Identity'
        '500':
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
      operationId: get-identity
      description: Get a single identity from a project.
    delete:
      summary: Delete identity
      operationId: delete-identity
      responses:
        '204':
          description: No Content
          content:
            application/json:
              schema: {}
        '500':
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
      tags:
        - identities
      description: Delete an environment specific identity.
  '/targeting/{workspaceKey}/{projectKey}/{flagKey}/{envKey}':
    parameters:
      - name: flagKey
        in: path
        required: true
        description: The flag key
        schema:
          type: string
      - name: projectKey
        in: path
        required: true
        description: The project key
        schema:
          type: string
      - schema:
          type: string
        name: workspaceKey
        in: path
        required: true
        description: The workspace key
      - schema:
          type: string
        name: envKey
        in: path
        required: true
        description: The environment key
    get:
      summary: Get targeting
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SuccessResponse'
        '500':
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
      operationId: get-targeting
      description: "Get a specific flag's targeting configuration. "
      tags:
        - targeting
      parameters: []
    patch:
      summary: Update targeting
      operationId: update-tageting
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SuccessResponse'
        '500':
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
      description: Update a targeting configuration of a existing feature flag.
      parameters: []
      tags:
        - targeting
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PatchDocument'
        description: Patch Document (RFC 6902)
    post:
      summary: Create targeting
      operationId: create-targeting
      responses:
        '201':
          description: Created
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SuccessResponse'
      description: "Initialise a flag's targeting configuration."
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Targeting'
      tags:
        - targeting
    delete:
      summary: Delete targeting
      operationId: delete-targeting
      responses:
        '204':
          description: No Content
          content:
            application/json:
              schema: {}
        '500':
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
      description: Delete targeting for a particular flag
      tags:
        - targeting
  '/targeting-rules/{workspaceKey}/{projectKey}/{flagKey}/{envKey}':
    parameters:
      - name: projectKey
        in: path
        required: true
        description: The project key
        schema:
          type: string
      - name: flagKey
        in: path
        required: true
        description: The flag key
        schema:
          type: string
      - schema:
          type: string
        name: workspaceKey
        in: path
        required: true
        description: The workspace key
      - schema:
          type: string
        name: envKey
        in: path
        required: true
        description: The environment key
    get:
      summary: List targeting rules
      tags:
        - targeting-rules
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SuccessResponse'
        '500':
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
      operationId: list-target-rules
      description: List the targeting rules of an existing flag in a specific environment.
      parameters: []
    post:
      summary: Create targeting rule
      operationId: create-targeting-rule
      responses:
        '201':
          description: Created
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SuccessResponse'
        '500':
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
      tags:
        - targeting-rules
      description: Create a new targeting rule for a feature flag in a specific environment.
      parameters: []
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/TargetingRule'
  '/targeting-rules/{workspaceKey}/{projectKey}/{flagKey}/{envKey}/{ruleKey}':
    parameters:
      - name: projectKey
        in: path
        required: true
        description: The project key
        schema:
          type: string
      - name: flagKey
        in: path
        required: true
        description: The flag key
        schema:
          type: string
      - name: ruleKey
        in: path
        required: true
        description: The rule key
        schema:
          type: string
      - schema:
          type: string
        name: workspaceKey
        in: path
        required: true
        description: The workspace key
      - schema:
          type: string
        name: envKey
        in: path
        required: true
        description: The environment key
    get:
      summary: Get targeting rule
      tags:
        - targeting-rules
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SuccessResponse'
        '500':
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
      operationId: get-targeting-rule
      parameters:
        - in: query
          name: envKey
          required: true
          description: The environment key
          schema:
            type: string
      description: Get a targeting rule for a specfic flag and its environment.
    patch:
      summary: Update targeting rule
      operationId: update-targeting-rule
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SuccessResponse'
        '500':
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
      description: Update an existing target rule.
      parameters:
        - in: query
          name: env
          description: The environment key
          required: true
          schema:
            type: string
      tags:
        - targeting-rules
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PatchDocument'
        description: Patch Document (RFC 6902)
    delete:
      summary: Delete targeting rule
      operationId: delete-targeting-rule
      responses:
        '204':
          description: No Content
          content:
            application/json:
              schema: {}
        '500':
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
      description: Delete an existing targeting rule.
      parameters:
        - in: query
          name: env
          required: true
          description: The environment key
          schema:
            type: string
      tags:
        - targeting-rules
  '/targeting-weights/{workspaceKey}/{projectKey}/{flagKey}/{envKey}':
    parameters:
      - name: projectKey
        in: path
        required: true
        description: The project key
        schema:
          type: string
      - name: flagKey
        in: path
        required: true
        description: The flag key
        schema:
          type: string
      - schema:
          type: string
        name: workspaceKey
        in: path
        required: true
        description: The workspace key
      - schema:
          type: string
        name: envKey
        in: path
        required: true
        description: The environment key
    get:
      summary: List targeting weights
      tags:
        - targeting-weights
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SuccessResponse'
        '500':
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
      operationId: list-targeting-weights
      description: Provide new targeting weight for each variations.
      parameters:
        - schema:
            type: string
          in: query
          name: ruleKey
          description: Targeting rule key
    patch:
      summary: Update targeting weights
      operationId: update-targeting-weights
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SuccessResponse'
        '500':
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
      description: Update targeting weights.
      parameters:
        - in: query
          name: ruleKey
          description: Targeting rule key
          schema:
            type: string
      tags:
        - targeting-weights
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PatchDocument'
        description: Patch Document (RFC 6902)
    post:
      summary: Create targeting weights
      operationId: create-targeting-weights
      responses:
        '201':
          description: Created
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SuccessResponse'
        '500':
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
      description: Initialise targeting weights for a given flag
      requestBody:
        content:
          application/json:
            schema:
              type: array
              items:
                $ref: '#/components/schemas/TargetingWeight'
        description: ''
      tags:
        - targeting-weights
      parameters:
        - schema:
            type: string
          in: query
          name: ruleKey
          description: Targeting rule key
    delete:
      summary: Delete targeting weights
      operationId: delete-targeting-weights
      responses:
        '204':
          description: No Content
          content:
            application/json:
              schema: {}
        '500':
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
      description: "Delete a flag's targeting weights"
      tags:
        - targeting-weights
      parameters:
        - schema:
            type: string
          in: query
          name: ruleKey
          description: Targeting rule key
  '/traits/{workspaceKey}/{projectKey}/{envKey}/{traitKey}':
    parameters:
      - name: projectKey
        in: path
        required: true
        description: The project key
        schema:
          type: string
      - name: envKey
        in: path
        required: true
        description: The environment key
        schema:
          type: string
      - schema:
          type: string
        name: workspaceKey
        in: path
        required: true
        description: The workspace key
      - schema:
          type: string
        name: traitKey
        in: path
        required: true
        description: The trait key
    get:
      summary: Get trait
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    $ref: '#/components/schemas/Trait'
        '500':
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
      operationId: get-trait
      description: Get a trait within a specific environment.
      parameters: []
      tags:
        - traits
    patch:
      summary: Update trait
      operationId: update-trait
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    $ref: '#/components/schemas/Trait'
        '500':
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
      description: Update an existing trait.
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PatchDocument'
        description: Patch Document (RFC 6902)
      tags:
        - traits
    delete:
      summary: Delete trait
      operationId: delete-trait
      responses:
        '204':
          description: No Content
        '500':
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
      description: Delete an existing trait.
      tags:
        - traits
  '/trait/{workspaceKey}/{projectKey}/{envKey}':
    parameters:
      - name: projectKey
        in: path
        required: true
        description: The project key
        schema:
          type: string
      - schema:
          type: string
        name: workspaceKey
        in: path
        required: true
        description: The workspace key
      - schema:
          type: string
        name: envKey
        in: path
        required: true
        description: The environment key
    get:
      summary: List traits indexed in an environment
      tags:
        - traits
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    type: array
                    items:
                      $ref: '#/components/schemas/Trait'
        '500':
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
      operationId: list-traits
      description: Retreive a list of traits in a particular environment.
    post:
      summary: Create trait
      operationId: create-trait
      responses:
        '201':
          description: Created
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    $ref: '#/components/schemas/Trait'
        '500':
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
      tags:
        - traits
      description: Create a new trait for a particular environment
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Trait'
        description: Environmnet Object
  '/segments/{workspaceKey}/{projectKey}':
    parameters:
      - name: projectKey
        in: path
        required: true
        description: The project key
        schema:
          type: string
      - schema:
          type: string
        name: workspaceKey
        in: path
        required: true
        description: The workspace key
    get:
      summary: List segments
      tags:
        - segments
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SuccessResponse'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '403':
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '404':
          description: Not Found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
      operationId: list-segments
      description: "List a project's user segments."
    post:
      summary: Create segment
      operationId: create-segment
      responses:
        '201':
          description: Created
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SuccessResponse'
        '500':
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
      tags:
        - segments
      description: Create a user segment in a specific project.
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Segment'
  '/segments/{workspaceKey}/{projectKey}/{segmentKey}':
    parameters:
      - name: projectKey
        in: path
        required: true
        description: The project key
        schema:
          type: string
      - name: segmentKey
        in: path
        required: true
        description: The segment key
        schema:
          type: string
      - schema:
          type: string
        name: workspaceKey
        in: path
        required: true
        description: The workspace key
    get:
      summary: Get segment
      tags:
        - segments
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SuccessResponse'
        '500':
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
      operationId: get-segment
      description: Get a user segment from a project.
    patch:
      summary: Update segment
      operationId: update-segment
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SuccessResponse'
        '500':
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
      description: Update an existing user segment in a specific project.
      tags:
        - segments
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PatchDocument'
        description: Patch Document (RFC 6902)
    delete:
      summary: Delete segment
      operationId: delete-segment
      responses:
        '204':
          description: No Content
        '500':
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
      tags:
        - segments
      description: Delete an existing user segment.
  '/segment-rules/{workspaceKey}/{projectKey}/{segmentKey}':
    parameters:
      - name: projectKey
        in: path
        required: true
        description: The project key
        schema:
          type: string
      - name: segmentKey
        in: path
        required: true
        description: The segment key
        schema:
          type: string
      - schema:
          type: string
        name: workspaceKey
        in: path
        required: true
        description: The workspace key
    get:
      summary: List segment rules
      tags:
        - segment-rules
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SuccessResponse'
        '500':
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
      operationId: list-segment-rules
      description: List segment rules for a particular segment.
    post:
      summary: Create segment rule
      operationId: create-segment-rule
      responses:
        '201':
          description: Created
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SuccessResponse'
        '500':
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
      tags:
        - segment-rules
      description: Create a new segment rule for a particular segment.
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/SegmentRule'
        description: Segment Rules
  '/segment-rules/{workspaceKey}/{projectKey}/{segmentKey}/{ruleKey}':
    parameters:
      - name: projectKey
        in: path
        required: true
        description: The project key
        schema:
          type: string
      - name: segmentKey
        in: path
        required: true
        description: The segment key
        schema:
          type: string
      - name: ruleKey
        in: path
        required: true
        description: The segment rule key
        schema:
          type: string
      - schema:
          type: string
        name: workspaceKey
        in: path
        required: true
        description: The workspace key
    get:
      summary: Get segment rule
      tags:
        - segment-rules
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    $ref: '#/components/schemas/SegmentRule'
        '500':
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
      operationId: get-segment-rule
      description: Get a specific segment rule
    patch:
      summary: Update segment rule
      operationId: update-segment-rule
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    $ref: '#/components/schemas/SegmentRule'
        '500':
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
      description: Update an existing segment rule.
      tags:
        - segment-rules
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PatchDocument'
        description: Patch Document (RFC 6902)
    delete:
      summary: Delete segment rule
      operationId: delete-segment-rule
      responses:
        '204':
          description: No Content
        '500':
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
      description: Delete an existing segment rule
      tags:
        - segment-rules
servers:
  - url: 'https://api.flagbase.io'
    description: Flagbase Cloud
  - url: 'http://localhost:5051'
    description: Localhost
components:
  requestBodies:
    AccessInput:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/AccessInput'
      description: Access Key-Secret Pair
    Workspace:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/Workspace'
      description: Workspace Object
    AccessPairInput:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/AccessPairInput'
      description: Access Key-Secret Pair
    Variation:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/Variation'
      description: Variation Object
    Segment:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/Segment'
      description: Segment Object
  schemas:
    PatchDocument:
      description: A JSONPatch document as defined by RFC 6902
      title: PatchDocument
      type: array
      items:
        type: object
        properties:
          op:
            type: string
            description: The operation to be performed
            enum:
              - add
              - remove
              - replace
              - move
              - copy
              - test
          path:
            type: string
            description: A JSON-Pointer
          value:
            type: object
            description: The value to be used within the operations.
          from:
            type: string
            description: A string containing a JSON Pointer value.
    Workspace:
      description: A representation of a workspace
      type: object
      title: Workspace
      x-examples: {}
      properties:
        key:
          $ref: '#/components/schemas/ResourceKey'
        name:
          $ref: '#/components/schemas/ResouceName'
        description:
          $ref: '#/components/schemas/ResourceDescription'
        tags:
          $ref: '#/components/schemas/ResourceTags'
      required:
        - key
    Identity:
      title: Identity
      type: object
      description: A identity refers to a user who has evaluated a flag.
      properties:
        key:
          type: string
          description: Unique key representing an identity
      required:
        - key
    Access:
      title: Access
      type: object
      description: 'Access is used to represent the relationship between the API user and the service. Access objects are attached to the resources, which are used to authorise users.'
      properties:
        id:
          type: string
          description: Arbitrary access identifier
        key:
          type: string
          description: Generated access key (make sure you save this key)
        secret:
          type: string
          description: Generated secret (make sure you save this secert).
        type:
          type: string
          description: 'Access key type describes the level of permissions you get for a particular resource (root > user > service).'
          enum:
            - root
            - admin
            - user
            - service
        description:
          $ref: '#/components/schemas/ResourceDescription'
        tags:
          $ref: '#/components/schemas/ResourceTags'
        expiresAt:
          type: integer
          description: Unix time stating when this access expires.
          format: int64
        name:
          $ref: '#/components/schemas/ResouceName'
    AccessInput:
      title: AccessInput
      type: object
      description: Input params for creating or updating access
      properties:
        type:
          type: string
          enum:
            - admin
            - user
            - service
          description: 'Access key type describes the level of permissions you get for a particular resource (root > user > service).'
          default: service
        name:
          $ref: '#/components/schemas/ResouceName'
        description:
          $ref: '#/components/schemas/ResourceDescription'
        tags:
          $ref: '#/components/schemas/ResourceTags'
        expiresAt:
          type: integer
          description: Unix time stating when this access expires.
          format: int64
    Auditlog:
      title: Auditlog
      type: object
      properties:
        time:
          type: string
          format: date-time
        description:
          type: string
        urn:
          type: string
        action:
          type: string
        data:
          oneOf:
            - type: string
            - type: object
      required:
        - time
        - urn
        - action
    ResourceKey:
      type: string
      title: Resource Key
      pattern: '^[a-z0-9]+([_ -]?[a-z0-9])*$'
      maxLength: 30
      example: example-key
      description: A unique key used to identify this resource.
      minLength: 4
    ResouceName:
      type: string
      title: Resouce Name
      description: A name used to label resources. Ideally a human-readable version of the resource key.
      maxLength: 30
      example: Example Name
    ResourceDescription:
      type: string
      title: Resource Description
      description: Optional resource description.
      example: This should be a description.
    ResourceTags:
      title: Resource Tags
      description: 'Optional tags used to identify this resource. '
      type: array
      x-examples: {}
      items:
        type: string
        example: example-tag
    Environment:
      title: Environment
      type: object
      properties:
        key:
          $ref: '#/components/schemas/ResourceKey'
        name:
          $ref: '#/components/schemas/ResouceName'
        description:
          $ref: '#/components/schemas/ResourceDescription'
        tags:
          $ref: '#/components/schemas/ResourceTags'
      required:
        - key
    EnvironmentInput:
      title: EnvironmentInput
      type: object
      properties:
        key:
          $ref: '#/components/schemas/ResourceKey'
        name:
          $ref: '#/components/schemas/ResouceName'
        description:
          $ref: '#/components/schemas/ResourceDescription'
        tags:
          $ref: '#/components/schemas/ResourceTags'
      required:
        - key
    Project:
      title: Project
      type: object
      description: A project is a collection of environments and their respective flags.
      properties:
        key:
          $ref: '#/components/schemas/ResourceKey'
        name:
          $ref: '#/components/schemas/ResouceName'
        description:
          $ref: '#/components/schemas/ResourceDescription'
        tags:
          $ref: '#/components/schemas/ResouceName'
      required:
        - key
    Flag:
      title: Flag
      type: object
      description: "A flag (aka feature flag) refers to a software toggle used to define a particular module's state. Flags can belong to multiple environments."
      properties:
        key:
          $ref: '#/components/schemas/ResourceKey'
        name:
          $ref: '#/components/schemas/ResouceName'
        description:
          $ref: '#/components/schemas/ResourceDescription'
        tags:
          $ref: '#/components/schemas/ResourceTags'
      required:
        - key
    Variation:
      title: Variation
      type: object
      description: 'A variation refers to a feature flag value. Eg. (Bool: True, False), (Multi-variant: A, B, C)'
      properties:
        key:
          $ref: '#/components/schemas/ResourceKey'
        name:
          $ref: '#/components/schemas/ResouceName'
        description:
          $ref: '#/components/schemas/ResourceDescription'
        tags:
          $ref: '#/components/schemas/ResourceTags'
      required:
        - key
    SuccessResponse:
      title: SuccessResponse
      type: object
      properties:
        data:
          type: object
      description: Standard success response object
    ErrorResponse:
      title: ErrorResponse
      type: object
      description: Error response is an array of error objects
      x-examples: {}
      properties:
        errors:
          type: array
          items:
            $ref: '#/components/schemas/Error'
      required:
        - errors
    AccessPairInput:
      title: AccessPairInput
      type: object
      description: An access secret-key pair.
      properties:
        key:
          type: string
          description: The access key.
        secret:
          type: string
          description: The access secret.
    Segment:
      title: Segment
      type: object
      description: A segment is a collection of identities with similar traits.
      properties:
        key:
          $ref: '#/components/schemas/ResourceKey'
        name:
          $ref: '#/components/schemas/ResouceName'
        description:
          $ref: '#/components/schemas/ResourceDescription'
        tags:
          $ref: '#/components/schemas/ResourceTags'
      required:
        - key
    SegmentRule:
      title: SegmentRule
      type: object
      description: SegmentRule represents a condition used to filter identities for a particular segment.
      properties:
        key:
          $ref: '#/components/schemas/ResourceKey'
        traitKey:
          type: string
        operator:
          type: string
          enum:
            - equal
            - greater_than
            - greater_than_or_equal
            - contains
            - regex
          example: equal
        traitValue:
          type: string
    Error:
      title: Error
      type: object
      properties:
        code:
          type: string
        'message ':
          type: string
      description: 'Standard error response object, used inside an error response'
    AccessToken:
      title: AccessToken
      description: Access token
      type: object
      properties:
        token:
          type: string
        access:
          $ref: '#/components/schemas/Access'
    Trait:
      title: Trait
      type: object
      properties:
        id:
          type: string
        key:
          type: string
        isIdentifier:
          type: boolean
      required:
        - id
        - key
        - isIdentifier
    Targeting:
      title: Targeting
      type: object
      description: Targeting defines the evaluation criteria for a particular flag
      properties:
        enabled:
          type: boolean
        fallthroughVariationKey:
          type: string
    TargetingRule:
      title: TargetingRule
      type: object
      description: TargetingRule represents a specific condition for evaluation
      properties:
        key:
          $ref: '#/components/schemas/ResourceKey'
        type:
          type: string
        matches:
          type: boolean
        identityKey:
          type: string
        segmentKey:
          type: string
        variationKey:
          type: string
    TargetingWeight:
      title: TargetingWeight
      type: object
      description: TargetingWeight represents a percentage value assigned to a variation for a given targeting configuration
      properties:
        key:
          $ref: '#/components/schemas/ResourceKey'
        type:
          type: string
        weight:
          type: number
        variationKey:
          type: string
